package com.wallet.bo.wallets.ui.fragment;

import android.content.Intent;
import android.databinding.ViewDataBinding;
import android.support.v7.widget.RecyclerView;
import android.view.View;

import com.squareup.picasso.Picasso;
import com.wallet.bo.wallets.R;
import com.wallet.bo.wallets.Utils.dedclick.AntiShake;
import com.wallet.bo.wallets.adapter.CommAdapter;
import com.wallet.bo.wallets.databinding.ShopItemBinding;
import com.wallet.bo.wallets.http.ApiBaseResponseCallback;
import com.wallet.bo.wallets.pojo.Config;
import com.wallet.bo.wallets.pojo.Products;
import com.wallet.bo.wallets.ui.activity.ProductDetailsActivity;
import com.wallet.bo.wallets.ui.weiget.EaseTitleBar;
import com.wallet.bo.wallets.ui.weiget.load.DefaultLoadingLayout;
import com.wallet.bo.wallets.ui.weiget.sr.FullyLinearLayoutManager;
import com.wallet.bo.wallets.ui.weiget.srv.PtrDefaultHandlerWithLoadMore;
import com.wallet.bo.wallets.ui.weiget.srv.PtrFrameLayout;
import com.wallet.bo.wallets.ui.weiget.srv.PullLayout;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import butterknife.BindView;

/**
 * author:ggband
 * date:2017/7/18 16:58
 * email:ggband520@163.com
 * desc:第三方产品列表
 */
public class LoanProductFragment extends BaseFragment {


    @BindView(R.id.ease_titlebar)
    EaseTitleBar easeTitlebar;
    @BindView(R.id.rv_shop)
    RecyclerView rvShop;
    @BindView(R.id.basic_pl)
    PullLayout basicPl;
    private CommAdapter commAdapter;
    private List<Products> productseLi = new ArrayList<>();
    private DefaultLoadingLayout loadingLayout;
    int page = 1;


    @Override
    public void initView() {
        loadingLayout = DefaultLoadingLayout.createDefaultLayout(activity, basicPl);
        easeTitlebar.setTitle(getResources().getStringArray(R.array.buttom_array)[1]);
        rvShop.setLayoutManager(new FullyLinearLayoutManager(context));
        commAdapter = new CommAdapter<Products>(productseLi, -1, R.layout.shop_item) {
            @Override
            protected void bindViewItemData(ViewDataBinding binding, int position, Products product, ViewHolder holder) {
                ShopItemBinding shopItemBinding = (ShopItemBinding) binding;
                shopItemBinding.tvCount.setText(product.getApplycount());
                shopItemBinding.tvPName.setText(product.getTitle());
                shopItemBinding.tvInfo.setText(product.getLoantime());
                Picasso.with(context).load(product.getImg()).placeholder(R.drawable.im_myhead).error(R.drawable.im_myhead).into(shopItemBinding.imShop);

            }

        };
        rvShop.setAdapter(commAdapter);
        basicPl.post(new Runnable() {
            @Override
            public void run() {
                basicPl.autoRefresh(true);
            }
        });


    }

    @Override
    public void setViewUp() {

        basicPl.setMode(PtrFrameLayout.Mode.BOTH);
        basicPl.setPtrHandler(new PtrDefaultHandlerWithLoadMore() {
            @Override
            public void onLoadMoreBegin(PtrFrameLayout frame) {
                initProduct();

            }

            @Override
            public void onRefreshBegin(PtrFrameLayout frame) {
                page = 1;
                initProduct();
            }
        });

    }

    private void initProduct() {
        Map<String, String> rp = new HashMap<>();
        rp.put("page", String.valueOf(page));

        httpLoader.products(rp, new ApiBaseResponseCallback<List<Products>>() {
            @Override
            public void onSuccessful(List<Products> productses) {
                if (page == 1)
                    productseLi.clear();
                for (Products products : productses) {
                    productseLi.add(products);
                }
                commAdapter.notifyDataSetChanged();
                page++;
            }

            @Override
            public void onFailure(String msg) {
                if (msg.equals(Config.NONETWORK))
                    loadingLayout.onNonet();
                toastShow(msg);
            }

            @Override
            public void onFinish() {
                basicPl.refreshComplete();
            }
        });


        commAdapter.setOnItemClickListener(new CommAdapter.OnItemClickListener() {
            @Override
            public void onItemClick(View item, long position) {
                Products products = productseLi.get((int) position);
                if (AntiShake.check(item.getId())) {    //判断是否多次点击
                    return;
                }

                Intent intent = new Intent(activity, ProductDetailsActivity.class);
                intent.putExtra("products", products);
                activity.startActivity(intent);
            }
        });

    }

    @Override
    public int getLayoutId() {
        return R.layout.fragment_loanproduct;
    }


//    @OnClick({R.id.bt_loan})
//    public void onClick(View view) {
//
//        switch (view.getId()) {
//
//            case R.id.bt_loan:
//
//                // startActivity(new Intent(this, RepaymentActivity.class));
//                break;
//
//        }

}



